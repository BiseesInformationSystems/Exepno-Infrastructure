apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "exepno-infrastructure.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "exepno-infrastructure.labels" . | nindent 4 }}
data:
  config.yaml: |
    # The identity section contains authentication information used by the agent.
    identities:
    - name: gcp
      gcp:
        # This parameter accepts a base64-encoded JSON service
        # account key. The value comes from the reporting secret.
        encodedServiceAccountKey: $AGENT_ENCODED_KEY

    # The metrics section defines the metric that will be reported.
    # Metric names should match verbatim the identifiers created
    # during pricing setup.
    metrics:
    # Metric usage reports are either generated by the agent as
    # defined in "sources", or externally, i.e. by the application.
    # Since this metric is not supported by the "sources" section,
    # the application must send usage reports for this metric to
    # the agent.

    # The reporting unit which the application should use to report
    # usage to the agent should align with the metric unit in the
    # backend service config (set from the "reporting unit" in the
    # portal).
    #
    # For unit/time metrics, the reporting metric should likely be
    # more granular than the pricing metric, since usage should be
    # reported frequently
    # e.g. metric may be reported in MiBy/min but priced in GiBy/day
    #
    # The reporting metric is recommended to be more granular than
    # the pricing metric. If it is not, a double type is likely
    # needed to provide sufficient precision.
    - name: terraform_plan_exepno_infrastructure_pulumi_cpu_hour
      type: int

      # The endpoints section of a metric defines which endpoints the
      # metric data is sent to.
      endpoints:
      - name: on_disk
      - name: servicecontrol

      # Metrics reported by the application are aggregated by the
      # agent for a specified period of time and sent to the
      # reporting endpoint (e.g. Google Service Control)
      aggregation:
        bufferSeconds: 60

    # The endpoints section defines where metering data is ultimately
    # sent. Currently supported endpoints include:
    # * disk - some directory on the local filesystem
    # * servicecontrol - Google Service Control
    endpoints:
    - name: on_disk
      # The disk endpoint is useful for debugging, but its inclusion
      # is not necessary in a production deployment.
      disk:
        reportDir: /var/lib/ubbagent/reports
        expireSeconds: 3600
    - name: servicecontrol
      servicecontrol:
        identity: gcp
        # The service name is unique to your application and will be
        # provided during onboarding.
        serviceName: exepno-infrastructure.endpoints.bisees-public.cloud.goog
        consumerId: $AGENT_CONSUMER_ID  # From the reporting secret.
